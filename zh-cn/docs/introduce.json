{
  "filename": "introduce.md",
  "__html": "<h2>愿景</h2>\n<p>ApiBoot为接口服务而生，基于SpringBoot完成扩展、自动化配置，通过封装一系列Starter来让调用者快速集成组件，降低学习、使用门槛，提高开发效率。</p>\n<h2>版本管理规范</h2>\n<p>项目的版本号格式为 x.x.x 的形式，其中 x 的数值类型为数字，从 0 开始取值，且不限于 0~9 这个范围。\n集成新的第三方框架为小版本更新，对应修改第三位版本数值，如：2.0.1 -&gt; 2.0.2</p>\n<h2>主要功能</h2>\n<ul>\n<li><strong>服务资源安全</strong> ：通过整合<code>SpringSecurity</code> + <code>Oauth2</code>来完成接口服务的安全性，安全拦截路径内的请求必须携带<code>请求令牌</code>才可以访问到资源内容，资源内容可配置指定身份、权限访问。</li>\n<li><strong>服务授权认证中心</strong>：服务授权以及认证是由<code>Oauth2</code>来担任，通过<code>password</code>授权模式获取<code>请求令牌</code>后访问资源服务，一个配置即可开启<code>Jwt</code>格式化<code>AccessToken</code></li>\n<li><strong>文档自动生成</strong>：通过集成<code>Swagger2</code>来完成文档的侵入式生成，侵入式文档后期会被替代，<code>ApiBoot Security Oauth</code>已默认排除<code>swagger2</code>相关的资源路径。</li>\n<li><strong>返回JSON格式化</strong>：使用阿里巴巴的<code>FastJson</code>来完成返回<code>Json</code>字符串的格式化，自动扫描装载自定义的<code>ValueFilter</code>实现类，用于自定义返回格式化。</li>\n<li><strong>数据库ORM框架</strong>：<code>mybatis-enhance</code>是一款由我开源的数据库持久化框架，基于<code>mybatis</code>进行封装编写，可以完成动态查询数据，语法与<code>SQL</code>语法几乎一致，内置常用方法提供直接调用，支持方法命名规则查询，一个接口方法就可以自动完成查询，不再编写<code>SQL</code>语句。</li>\n<li><strong>动态数据源</strong>：完成项目的多数据源配置、内部集成<code>druid</code>、<code>HikariCP</code>数据源实现方式，配置主从数据源、多数据库类型数据源、多种数据源实现方式集成。</li>\n<li><strong>自动分页插件</strong>：<code>mybatis-pageable</code>是一款由我开源的自动化分页插件，直接摆脱编写<code>分页代码</code>，仅仅需要传递的分页参数就可以自动进行查询，目前支持主流的<strong>12</strong>种数据库。</li>\n<li><strong>资源业务自动分离</strong>：<code>resource-load</code>用于业务与资源信息的分页，比如：用户头像、封面图等，只需要关心业务，让<code>resource-load</code>自动去维护资源信息。</li>\n<li><strong>接口限流</strong>：<code>rate-limiter</code>用于接口服务的请求流量限制，可以根据QPS配置每秒允许访问的次数。</li>\n<li><strong>代码生成插件</strong>：<code>code-builder</code>是一款由我开源的代码生成插件，直接摆脱实体类的生成，支持自定义<code>freemarker</code>模板来完成自定义生成类文件，比如：<code>Service</code>、<code>Controller</code>、<code>Mapper</code>等。</li>\n<li><strong>七牛云资源处理</strong>：集成七牛云提供的SDK来完成文件的上传、下载等方法实现，开箱即用。</li>\n<li><strong>阿里云OSS资源处理</strong>：集成阿里云OSS提供的SDK来完成文件的上传、下载等方法实现，开箱即用。</li>\n<li><strong>阿里云短信</strong>：集成阿里云提供的SMS服务，简单配置即可完成短信发送，覆盖全球的短信服务，友好、高效、智能的互联化通讯能力，帮助企业迅速搭建客户触达通道。</li>\n</ul>\n<p>更多功能请参考 <a href=\"https://github.com/hengboy/api-boot/tree/master/api-boot-project/api-boot-starters\">更多功能列表</a></p>\n<h2>组件</h2>\n<ul>\n<li><strong><a href=\"https://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/\">Spring Security</a></strong>：Spring提供的安全框架，Spring家族式的设计，无缝整合SpringBoot</li>\n<li><strong><a href=\"https://oauth.net/2/\">OAuth2</a></strong>：OAuth是一个网络授权的标准。</li>\n<li><strong><a href=\"https://jwt.io/\">JWT</a></strong>：JSON Web Token是目前流行的跨域认证解决方案，用于格式化OAuth2生成的Token。</li>\n<li><strong><a href=\"http://www.quartz-scheduler.org\">Quartz</a></strong>：分布式定时任务调度框架</li>\n<li><strong><a href=\"https://swagger.io/\">Swagger2</a></strong>：Swagger是一款API文档生成工具，自动扫描代码进行生成可运行测试的文档。</li>\n<li><strong><a href=\"https://github.com/hengboy/mybatis-enhance\">Mybatis Enhance</a></strong>：<code>Enhance</code>是对于原生的<code>MyBatis</code>的增强编写，不影响任何原生的使用，使用后完全替代<code>mybatis-core</code>、<code>mybatis-spring</code>以及<code>mybatis-spring-boot-starter</code>，可以使用<code>SpringBoot</code>配置文件的形式进行配置相关的内容，尽可能强大的方便快速的集成<code>MyBatis</code>。</li>\n<li><strong><a href=\"https://github.com/hengboy/api-boot/tree/master/api-boot-samples/api-boot-sample-mybatis-enhance-codegen\">Mybatis Enhance Codegen</a></strong>：为<code>Mybatis Enhance</code>搭配研发的代码自动生成<code>Maven Plugin</code>，自定生成对应数据库表结构的数据实体、动态查询实体等，通过<code>like</code>语法可以过滤指定表的生成。</li>\n<li><strong><a href=\"https://github.com/hengboy/api-boot/tree/master/api-boot-project/api-boot-plugins/api-boot-plugin-datasource-switch\">DataSource Switch</a></strong>：一款多数据源自动切换框架，可配置多种数据库类型数据源集成、主从数据源配置。</li>\n<li><strong><a href=\"https://github.com/hengboy/mybatis-pageable\">Mybatis Pageable</a></strong>：<code>MyBatis-Pageable</code>是一款自动化分页的插件，基于<code>MyBatis</code>内部的插件<code>Interceptor</code>拦截器编写完成，拦截<code>Executor.query</code>的两个重载方法计算出分页的信息以及根据配置的数据库<code>Dialect</code>自动执行不同的查询语句完成总数量的统计。</li>\n<li><strong><a href=\"https://github.com/hengboy/code-builder\">Code Builder</a></strong>：<code>code-builder</code>是一款代码生成<code>maven mojo</code>插件，通过简单的配置就可以完成数据库内<code>Table</code>转换<code>Entity</code>或者其他实体类，想怎么生成完全根据你的个人业务逻辑，<code>code-builder</code>尽可能的完善的提供数据库内的一些定义的信息，让你更方便更灵活的来生成<code>Java</code>文件。</li>\n<li><strong><a href=\"https://github.com/hengboy/api-boot/tree/master/api-boot-samples/api-boot-sample-resource-load\">Resource Load</a></strong>：通过AOP实现的资源自动加载、更新、删除、添加，内部还提供了内存、Redis缓存方式，极大的减轻数据库资源查询的压力。</li>\n<li><strong><a href=\"https://github.com/hengboy/api-boot/tree/master/api-boot-samples/api-boot-sample-rate-limiter\">Rate Limiter</a></strong>：通过拦截器实现的服务接口流量限制，可以配置某一个接口每秒内的访问次数(QPS)，通过集成<code>Google</code>的令牌桶限流方式完成。</li>\n</ul>\n<p>更多组件请参考<a href=\"https://github.com/hengboy/api-boot/tree/master/api-boot-project/api-boot-starters\">更多集成组件</a></p>\n<h3>Stargazers over time</h3>\n<p><a href=\"https://starchart.cc/hengboy/api-boot\"><img src=\"https://starchart.cc/hengboy/api-boot.svg\" alt=\"Stargazers over time\"></a></p>\n",
  "link": "/zh-cn/docs/introduce.html",
  "meta": {
    "title": "ApiBoot 简介"
  }
}