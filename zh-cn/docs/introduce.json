{
  "filename": "introduce.md",
  "__html": "<p align=\"center\">\n<img src=\"http://apiboot.minbox.org/img/apiboot-colorful.png\" height=\"200\"/>\n</p>\n<p align=\"center\">\n    <img src=\"https://www.travis-ci.org/hengboy/api-boot.svg?branch=master\" alt=\"build\">\n    <a href=\"https://gitter.im/api-boot/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge\">\n        <img src=\"https://badges.gitter.im/api-boot/community.svg\" alt=\"Gitter\"/>\n    </a>\n    <a href=\"http://apiboot.minbox.org\">\n        <img src=\"https://img.shields.io/badge/link-官方文档-green.svg?style=flat-square\" alt=\"ApiBoot官网\">\n    </a>\n    <a href=\"https://search.maven.org/search?q=g:org.minbox.framework\">\n        <img src=\"https://img.shields.io/maven-central/v/org.minbox.framework/api-boot.svg?label=Maven%20Central\" alt=\"Maven Center\">\n    </a>\n    <a href=\"https://github.com/weibocom/motan/blob/master/LICENSE\">\n        <img src=\"https://img.shields.io/badge/License-Apache%202.0-green.svg\" alt=\"Apache License\">\n    </a>\n    <a href=\"#\">\n        <img src=\"https://img.shields.io/badge/JDK-1.8+-green.svg\" alt=\"JDK Version\">\n    </a>\n      <a href=\"#\">\n        <img src=\"https://img.shields.io/badge/SpringBoot-2.0+-green.svg\" alt=\"SpringBoot Version\">\n    </a>\n</p>\n<p>ApiBoot是接口服务的落地解决方案，提供了一系列开箱即用的组件，通过封装来简化主流第三方框架的集成，从而提高开发者开发效率、学习成本、降低入门门槛，真正的实现开箱即用！！！</p>\n<p>对SpringBoot简单了解的开发者就可以编写安全稳定的接口服务，可为移动端、网页端等多个端点提供丰富的安全接口。</p>\n<p>ApiBoot依赖于SpringBoot，可以使用ApiBoot构建独立的Java应用程序。</p>\n<p>愿景：</p>\n<ul>\n<li>为Java开发者提供低门槛第三方框架集成解决方案，让复杂的框架集成使用的门槛更低。</li>\n<li>开箱即用，内部封装了主流框架，只需添加依赖、简单配置即可使用。</li>\n<li>各个组件可独立使用，不再冗余你的应用程序。</li>\n<li>可简单快速的构建安全的restful资源接口服务。</li>\n<li>可用于构建SpringCloud微服务服务实例。</li>\n<li>为🇨🇳开源做贡献，希望开源框架可以帮助更多的开发者。</li>\n</ul>\n<h2>安装 &amp; 入门</h2>\n<p>组件的使用请查看<a href=\"http://apiboot.minbox.org\" target=\"_blank\">官方参考文档</a>，开始使用请访问<a href=\"http://apiboot.minbox.org/zh-cn/docs/quick-start.html\" target=\"_blank\">第一个ApiBoot应用程序</a></p>\n<p>如果你是使用Maven来构建项目，你需要添加ApiBoot的版本依赖到你的pom.xml文件内，如下所示：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencyManagement</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span>\n    <span class=\"hljs-comment\">&lt;!--ApiBoot版本依赖--&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.minbox.framework<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>api-boot-dependencies<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${lastVersion}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scope</span>&gt;</span>import<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">scope</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">type</span>&gt;</span>pom<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">type</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencyManagement</span>&gt;</span>\n</code></pre>\n<blockquote>\n<p>注意：<strong>lastVersion</strong>需要替换为最新的ApiBoot版本，请访问<a href=\"http://apiboot.minbox.org/zh-cn/docs/version-rely.html\" target=\"_blank\">版本依赖 - 2.获取最新的ApiBoot依赖</a>查看。</p>\n</blockquote>\n<p>版本依赖添加完成后，我们接下来就可以进行添加项目内所需要的ApiBoot组件，下面是使用分布式链路组件minbox-logging示例：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span>\n  <span class=\"hljs-comment\">&lt;!--ApiBoot MinBox Logging--&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.minbox.framework<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>api-boot-starter-logging<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span>\n</code></pre>\n<p>添加完组件我们就可以根据<a href=\"http://apiboot.minbox.org\" target=\"_blank\">官方参考文档</a>找到对应组件的文档进行配置使用了。</p>\n<h2>获取帮助</h2>\n<p>如果在使用ApiBoot的过程中遇到了问题，你可以通过以下途径获取帮助！</p>\n<ul>\n<li>查看<a href=\"http://apiboot.minbox.org\" target=\"_blank\">官方参考文档</a>，使用的每一个细节都会在文档中进行体现。</li>\n<li>在<a href=\"https://gitee.com/minbox-projects/api-boot/issues\" target=\"_blank\">https://gitee.com/minbox-projects/api-boot/issues</a>提交你遇到的使用问题。</li>\n</ul>\n<h2>提交问题建议</h2>\n<p>每个人可能提出的问题不同，不过也会有一些相同的问题，如果您要提出问题，请遵循以下建议：</p>\n<ul>\n<li>在提交问题之前，请搜索issues内是否已经有人提出过该问题。</li>\n<li>如果您即将要提出的问题不存在，请<a href=\"https://gitee.com/minbox-projects/api-boot/issues\" target=\"_blank\">创建issue</a>。</li>\n<li>请在提出您的问题时提供尽可能有关ApiBoot可能多的信息，比如：ApiBoot的版本、JDK、使用组件等</li>\n<li>如果提问题时需要粘贴代码，请尽量使用markdown语法```转义符。</li>\n</ul>\n<h2>源码方式构建</h2>\n<p>ApiBoot正式版本都会发布到Maven Center，如果你想使用源码最新版本的ApiBoot（版本并未发布），可以直接通过源码的方式进行构建安装到本地使用，前提条件如下所示：</p>\n<ul>\n<li>本地需要配置Maven环境变量，建议<a href=\"https://maven.apache.org/download.cgi\" target=\"_blank\">使用最新版</a></li>\n<li>本地需要配置JDK环境变量，<a href=\"https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\" target=\"_blank\">JDK1.8下载地址</a></li>\n<li>本地需要配置Git环境变量，<a href=\"https://git-scm.com/downloads\" target=\"_blank\">Git下载地址</a></li>\n</ul>\n<pre><code class=\"language-sh\"><span class=\"hljs-comment\"># 下载master分支源码到本地</span>\n➜ git <span class=\"hljs-built_in\">clone</span> https://gitee.com/minbox-projects/api-boot.git\n<span class=\"hljs-comment\"># 进入api-boot源码根目录</span>\n➜ <span class=\"hljs-built_in\">cd</span> api-boot\n<span class=\"hljs-comment\"># 执行安装</span>\n➜ mvn clean install\n</code></pre>\n<h2>组件</h2>\n<p>ApiBoot内部提供了多个组件，下面简单的介绍组件的用途：</p>\n<h3>链路日志组件</h3>\n<p>内部通过集成整合<a href=\"https://gitee.com/minbox-projects/minbox-logging\" target=\"_blank\">minbox-logging</a>开源框架，提供零侵入式分布式链路日志分析框架的使用，可应用到SpringCloud微服务应用内，提供Admin端点进行采集日志、分析日志、日志告警通知、服务性能分析等。通过Admin Ui可查看实时链路日志信息、在线业务服务列表。</p>\n<h3>安全组件</h3>\n<p>内部通过整合SpringSecurity + OAuth2两大常用资源安全、认证授权框架来保证接口服务的安全性，<strong>内存方式只需要添加几行配置就可以完成整合</strong>，ApiBoot针对SpringSecurity提供了两种查询用户的方式：memory（内存）、jdbc（数据库）。而针对OAuth2则提供了三种方式存储生成后的Token以及Client信息：memory、jdbc、redis等。</p>\n<blockquote>\n<p>可以直接配置使用JWT格式化OAuth2生成的Token.</p>\n</blockquote>\n<h3>接口文档组件</h3>\n<p>通过集成<code>Swagger2</code>来完成文档的侵入式生成，侵入式文档后期会被替代，<code>ApiBoot Security Oauth</code>已默认排除<code>swagger2</code>相关的资源路径（如果自定义集成了OAuth2或者SpringSecurity需要手动排除Swagger资源路径）。</p>\n<h3>ORM组件（数据库持久化组件）</h3>\n<p>ApiBoot通过封装Mybatis提供了一款吸取JPA、Mybatis、QueryDSL等主流ORM框架的优点整合框架<a href=\"https://gitee.com/hengboy/mybatis-enhance\" target=\"_blank\">mybatis-enhance</a>，内部提供了常用CRUD方法，无需编写一行SQL就可以完成对数据的持久化操作，提供方法命名规则查询、动态查询等新特性。</p>\n<h3>代码生成组件</h3>\n<p>ApiBoot为mybatis-enhance提供了专门定制代码生成插件，可为数据库表对应生成数据实体生成、动态查询实体，mybatis-enhance-codegen是一款Maven Plugin，配置数据库链接信息后可根据配置过滤指定的表、全部表、指定前缀的表进行生成。</p>\n<h3>多数据源组件</h3>\n<p>ApiBoot针对多数据源切换的场景提供了自动化切换的方式，内部提供了两种数据源类型的配置实现，分别是：Druid、HikariCP，通过在类、方法上配置注解的方式切面自动切换为配置数据源，如未配置则使用默认的数据源。</p>\n<h3>自动分页组件</h3>\n<p>ApiBoot针对Mybatis持久化框架的使用者提供了自动化分页的插件<a href=\"https://gitee.com/hengboy/mybatis-pageable\" target=\"_blank\">mybatis-pageable</a>，这是一款基于Mybatis Plugin实现的插件，根据传递的分页参数可以自动查询出分页信息，如：总页数、每页条数、当前页码、是否存在上一页、下一页等。</p>\n<blockquote>\n<p>支持主流的12种数据库。</p>\n</blockquote>\n<h3>限流组件</h3>\n<p>ApiBoot针对单应用、分布式集群应用分别提供了一种限流的方式，针对单应用提供了Google的令牌桶方式限流，而针对服务集群环境提供了Redis Lua方式。</p>\n<blockquote>\n<p>限流配置秒级QPS访问量。</p>\n</blockquote>\n<h3>阿里云OSS组件</h3>\n<p>集成阿里云OSS提供的SDK来完成文件的上传、下载等方法实现，开箱即用。</p>\n<h3>阿里云短信组件</h3>\n<p>集成阿里云提供的SMS服务，简单配置即可完成短信发送，覆盖全球的短信服务，友好、高效、智能的互联化通讯能力，帮助企业迅速搭建客户触达通道。</p>\n<h3>阿里云邮件组件</h3>\n<p>集成阿里云提供的Mail服务，简单配置后，通过ApiBoot提供的封装类几行代码就可以完成邮件发送。</p>\n<h2>示例</h2>\n<p>ApiBoot提供了每一个组件的使用示例，在源码<a href=\"https://gitee.com/minbox-projects/api-boot/tree/master/api-boot-samples\">api-boot-samples</a>目录下根据组件名归类。</p>\n<h2>使用指南</h2>\n<p>请访问作者博客<a href=\"https://blog.yuqiyu.com\" target=\"_blank\">恒宇少年De成长之路</a>获取ApiBoot、MinBox开源组织内开源框架的最新的使用指南。</p>\n<h2>联系作者</h2>\n<p>作者公众号：</p>\n<img src=\"https://blog.yuqiyu.com/images/mp.jpg\" style=\"width:200px;\"/>\n<p>扫码关注公众号请回复<strong>ApiBoot</strong>获取作者微信号。</p>\n<h2>License</h2>\n<p>ApiBoot采用Apache2开源许可进行编写。</p>\n",
  "link": "/zh-cn/docs/introduce.html",
  "meta": {
    "title": "服务接口落地解决方案ApiBoot"
  }
}