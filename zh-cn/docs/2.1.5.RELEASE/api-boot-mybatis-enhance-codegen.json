{
  "filename": "api-boot-mybatis-enhance-codegen.md",
  "__html": "<h1>ApiBoot 为 Mybatis Enhance 专属打造的代码生成器</h1>\n<p><code>Mybatis Enhance Codegen</code>是一款<code>maven plugin</code>插件，在项目编译时运行，可把控<code>是否执行生成逻辑</code>、可根据自己的需求<code>过滤表名</code>生成，表名根据<code>like</code>语法匹配，完美搭配<code>Mybatis Enhance</code>使用，可自动生成<code>数据实体</code>、<code>动态查询实体</code>，不再为实体类映射表信息字段而犯愁、浪费个人精力。</p>\n<h2>添加插件</h2>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">build</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plugins</span>&gt;</span>\n    //...\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plugin</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.minbox.framework<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>api-boot-mybatis-enhance-maven-codegen<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.1.5.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span>\n        <span class=\"hljs-comment\">&lt;!--数据驱动依赖--&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>mysql<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>5.1.47<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">executions</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">execution</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">goals</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">goal</span>&gt;</span>generator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">goal</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">goals</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">execution</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">executions</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">configuration</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">execute</span>&gt;</span>true<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">execute</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dbName</span>&gt;</span>knowledge<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dbName</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dbUrl</span>&gt;</span>jdbc:mysql://localhost:3306<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dbUrl</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dbUserName</span>&gt;</span>root<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dbUserName</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dbPassword</span>&gt;</span>123456<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dbPassword</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">packageName</span>&gt;</span>org.minbox.framework.api.boot.sample<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">packageName</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tableNamePattern</span>&gt;</span>kl%<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tableNamePattern</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">configuration</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">plugin</span>&gt;</span>\n    //...\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">plugins</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">build</span>&gt;</span>\n</code></pre>\n<p><code>Codegen</code>在运行时，需要<code>数据库驱动</code>的支持，我本机使用的是<code>MySQL</code>，因为在上面我添加了相关的依赖。</p>\n<blockquote>\n<p>注意：<code>Codegen</code>内部使用<code>Code-Builder</code>的表信息获取的模块，MySQL的驱动默认只能使用5.x版本，不可以使用8.x。</p>\n</blockquote>\n<h2>相关配置参数</h2>\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>execute</code></td>\n<td>false</td>\n<td><code>Codegen</code>是否执行</td>\n</tr>\n<tr>\n<td><code>dbName</code></td>\n<td></td>\n<td>数据库名称</td>\n</tr>\n<tr>\n<td><code>dbUrl</code></td>\n<td></td>\n<td>数据库连接路径（排除数据库名称）</td>\n</tr>\n<tr>\n<td><code>dbUserName</code></td>\n<td></td>\n<td>连接数据库用户名</td>\n</tr>\n<tr>\n<td><code>dbPassword</code></td>\n<td></td>\n<td>连接数据库密码</td>\n</tr>\n<tr>\n<td><code>packageName</code></td>\n<td></td>\n<td>生成后实体类的package</td>\n</tr>\n<tr>\n<td><code>tableNamePattern</code></td>\n<td>%</td>\n<td>表名过滤表达式，向like语法一样使用，默认匹配数据库内全部表</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>在上面配置中，排除有默认值的配置，其他都必须进行声明配置。</p>\n</blockquote>\n<h2>执行生成</h2>\n<p><code>Codegen</code>是在编译项目时执行，编译项目我们可以通过如下方式执行：</p>\n<ol>\n<li>在项目根目录执行<code>mvn compile</code></li>\n<li>通过IDEA工具自带的<code>Maven-&gt;Lifecycle-&gt;compile</code>窗口双击进行编译项目</li>\n<li>通过IDEA工具自带的<code>Maven-&gt;Plugins-&gt;api-boot-mybatis-enhancecodegen:generator</code>窗口双击进行执行<code>Codegen</code></li>\n</ol>\n<p>编译过程中，控制台会进行输出自动生成表的日志信息，如下所示：</p>\n<pre><code class=\"language-sh\">......\n[INFO] Execution table: 【kl_article_info】 - 文章信息表 entity creation.\n......\n</code></pre>\n<p><code>Codegen</code>会把根据<code>tableNamePattern</code>查询到的表名进行输出，并且每个表会自动执行<code>实体类</code>、<code>动态查询实体</code>创建。</p>\n<h2>生成的实体类</h2>\n<p><strong>实体类命名</strong></p>\n<p>生成的实体类的命名规则是表名<code>驼峰</code>后的格式，示例如下所示：</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">package</span> org.minbox.framework.api.boot.sample;\n\n<span class=\"hljs-keyword\">import</span> com.gitee.hengboy.mybatis.enhance.common.annotation.Column;\n<span class=\"hljs-keyword\">import</span> com.gitee.hengboy.mybatis.enhance.common.annotation.Id;\n<span class=\"hljs-keyword\">import</span> com.gitee.hengboy.mybatis.enhance.common.annotation.Table;\n<span class=\"hljs-keyword\">import</span> com.gitee.hengboy.mybatis.enhance.common.enums.KeyGeneratorTypeEnum;\n<span class=\"hljs-keyword\">import</span> lombok.Data;\n\n<span class=\"hljs-keyword\">import</span> java.sql.Timestamp;\n\n<span class=\"hljs-comment\">/**\n * 文章信息表\n * <span class=\"hljs-doctag\">@author</span> ApiBoot Mybatis Enhance Codegen\n */</span>\n<span class=\"hljs-meta\">@Data</span>\n<span class=\"hljs-meta\">@Table</span>(name = <span class=\"hljs-string\">\"kl_article_info\"</span>)\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">KlArticleInfo</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * 主键自增\n     */</span>\n    <span class=\"hljs-meta\">@Id</span>(generatorType = KeyGeneratorTypeEnum.UUID)\n    <span class=\"hljs-meta\">@Column</span>(name = <span class=\"hljs-string\">\"AI_ID\"</span>)\n    <span class=\"hljs-keyword\">private</span> String aiId;\n    <span class=\"hljs-comment\">/**\n     * 文章所属用户\n     */</span>\n    <span class=\"hljs-meta\">@Column</span>(name = <span class=\"hljs-string\">\"AI_USER_ID\"</span>)\n    <span class=\"hljs-keyword\">private</span> String aiUserId;\n    <span class=\"hljs-comment\">/**\n     * 文章标题\n     */</span>\n    <span class=\"hljs-meta\">@Column</span>(name = <span class=\"hljs-string\">\"AI_TITLE\"</span>)\n    <span class=\"hljs-keyword\">private</span> String aiTitle;\n    <span class=\"hljs-comment\">/**\n     * 阅读量\n     */</span>\n    <span class=\"hljs-meta\">@Column</span>(name = <span class=\"hljs-string\">\"AI_READ_COUNT\"</span>)\n    <span class=\"hljs-keyword\">private</span> Integer aiReadCount;\n    <span class=\"hljs-comment\">/**\n     * 喜欢数量\n     */</span>\n    <span class=\"hljs-meta\">@Column</span>(name = <span class=\"hljs-string\">\"AI_LIKE_COUNT\"</span>)\n    <span class=\"hljs-keyword\">private</span> Integer aiLikeCount;\n    <span class=\"hljs-comment\">/**\n     * 评论数量\n     */</span>\n    <span class=\"hljs-meta\">@Column</span>(name = <span class=\"hljs-string\">\"AI_COMMENT_COUNT\"</span>)\n    <span class=\"hljs-keyword\">private</span> Integer aiCommentCount;\n    <span class=\"hljs-comment\">/**\n     * 分享数量\n     */</span>\n    <span class=\"hljs-meta\">@Column</span>(name = <span class=\"hljs-string\">\"AI_SHARE_COUNT\"</span>)\n    <span class=\"hljs-keyword\">private</span> Integer aiShareCount;\n    <span class=\"hljs-comment\">/**\n     * 文章内容\n     */</span>\n    <span class=\"hljs-meta\">@Column</span>(name = <span class=\"hljs-string\">\"AI_CONTENT\"</span>)\n    <span class=\"hljs-keyword\">private</span> String aiContent;\n    <span class=\"hljs-comment\">/**\n     * 是否为原创文章，Y：原创，N：转载\n     */</span>\n    <span class=\"hljs-meta\">@Column</span>(name = <span class=\"hljs-string\">\"AI_IS_ORIGINAL\"</span>)\n    <span class=\"hljs-keyword\">private</span> String aiIsOriginal;\n    <span class=\"hljs-comment\">/**\n     * 文章是否发布，Y：已发布，N：未发布\n     */</span>\n    <span class=\"hljs-meta\">@Column</span>(name = <span class=\"hljs-string\">\"AI_IS_RELEASE\"</span>)\n    <span class=\"hljs-keyword\">private</span> String aiIsRelease;\n    <span class=\"hljs-comment\">/**\n     * 是否热门,Y：热门，N：非热门\n     */</span>\n    <span class=\"hljs-meta\">@Column</span>(name = <span class=\"hljs-string\">\"AI_IS_HOT\"</span>)\n    <span class=\"hljs-keyword\">private</span> String aiIsHot;\n    <span class=\"hljs-comment\">/**\n     * 是否置顶，Y：置顶，N：普通\n     */</span>\n    <span class=\"hljs-meta\">@Column</span>(name = <span class=\"hljs-string\">\"AI_IS_TOP\"</span>)\n    <span class=\"hljs-keyword\">private</span> String aiIsTop;\n    <span class=\"hljs-comment\">/**\n     * 是否推荐，Y：推荐，N：不推荐\n     */</span>\n    <span class=\"hljs-meta\">@Column</span>(name = <span class=\"hljs-string\">\"AI_IS_RECOMMEND\"</span>)\n    <span class=\"hljs-keyword\">private</span> String aiIsRecommend;\n    <span class=\"hljs-comment\">/**\n     * 是否为markdown语法文章\n     */</span>\n    <span class=\"hljs-meta\">@Column</span>(name = <span class=\"hljs-string\">\"AI_IS_MARKDOWN\"</span>)\n    <span class=\"hljs-keyword\">private</span> String aiIsMarkdown;\n    <span class=\"hljs-comment\">/**\n     * 发布时间\n     */</span>\n    <span class=\"hljs-meta\">@Column</span>(name = <span class=\"hljs-string\">\"AI_RELEASE_TIME\"</span>)\n    <span class=\"hljs-keyword\">private</span> Timestamp aiReleaseTime;\n    <span class=\"hljs-comment\">/**\n     * 文章状态，O：正常，D：已删除\n     */</span>\n    <span class=\"hljs-meta\">@Column</span>(name = <span class=\"hljs-string\">\"AI_STATUS\"</span>)\n    <span class=\"hljs-keyword\">private</span> String aiStatus;\n    <span class=\"hljs-comment\">/**\n     * 备注信息\n     */</span>\n    <span class=\"hljs-meta\">@Column</span>(name = <span class=\"hljs-string\">\"AI_MARK\"</span>)\n    <span class=\"hljs-keyword\">private</span> String aiMark;\n    <span class=\"hljs-comment\">/**\n     * 文章创建时间\n     */</span>\n    <span class=\"hljs-meta\">@Column</span>(name = <span class=\"hljs-string\">\"AI_CREATE_TIME\"</span>)\n    <span class=\"hljs-keyword\">private</span> Timestamp aiCreateTime;\n}\n</code></pre>\n<p><code>@Id</code>的主键生成策略，会根据表内主键是否定义了自增来进行判断，如果是自增使用<code>KeyGeneratorTypeEnum.AUTO</code>，如果不是则使用<code>KeyGeneratorTypeEnum.UUID</code>，如果你项目内是自定义的主键，可以进行修改为<code>KeyGeneratorTypeEnum.DIY</code>。</p>\n<h2>生成的动态查询实体</h2>\n<p><strong>动态查询实体命名</strong></p>\n<p>动态查询实体的命名规则同样是<code>驼峰</code>，不过有个前缀为<code>D</code>，上面实体类名称为<code>KlArticleInfo</code>对应动态查询实体为<code>DKlArticleInfo</code>，生成示例如下所示：</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">package</span> org.minbox.framework.api.boot.sample;\n\n<span class=\"hljs-keyword\">import</span> com.gitee.hengboy.mybatis.enhance.dsl.expression.ColumnExpression;\n<span class=\"hljs-keyword\">import</span> com.gitee.hengboy.mybatis.enhance.dsl.expression.TableExpression;\n\n<span class=\"hljs-comment\">/**\n * 文章信息表\n * <span class=\"hljs-doctag\">@author</span> ApiBoot Mybatis Enhance Codegen\n */</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DKlArticleInfo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">TableExpression</span>&lt;<span class=\"hljs-title\">KlArticleInfo</span>&gt; </span>{\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">DKlArticleInfo</span><span class=\"hljs-params\">(String root)</span> </span>{\n        <span class=\"hljs-keyword\">super</span>(root);\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> DKlArticleInfo <span class=\"hljs-title\">DSL</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> DKlArticleInfo(<span class=\"hljs-string\">\"kl_article_info\"</span>);\n    }\n\n    <span class=\"hljs-comment\">/**\n     * 主键自增\n     */</span>\n    <span class=\"hljs-keyword\">public</span> ColumnExpression aiId = <span class=\"hljs-keyword\">new</span> ColumnExpression(<span class=\"hljs-string\">\"AI_ID\"</span>, <span class=\"hljs-keyword\">this</span>);\n    <span class=\"hljs-comment\">/**\n     * 文章所属用户\n     */</span>\n    <span class=\"hljs-keyword\">public</span> ColumnExpression aiUserId = <span class=\"hljs-keyword\">new</span> ColumnExpression(<span class=\"hljs-string\">\"AI_USER_ID\"</span>, <span class=\"hljs-keyword\">this</span>);\n    <span class=\"hljs-comment\">/**\n     * 文章标题\n     */</span>\n    <span class=\"hljs-keyword\">public</span> ColumnExpression aiTitle = <span class=\"hljs-keyword\">new</span> ColumnExpression(<span class=\"hljs-string\">\"AI_TITLE\"</span>, <span class=\"hljs-keyword\">this</span>);\n    <span class=\"hljs-comment\">/**\n     * 阅读量\n     */</span>\n    <span class=\"hljs-keyword\">public</span> ColumnExpression aiReadCount = <span class=\"hljs-keyword\">new</span> ColumnExpression(<span class=\"hljs-string\">\"AI_READ_COUNT\"</span>, <span class=\"hljs-keyword\">this</span>);\n    <span class=\"hljs-comment\">/**\n     * 喜欢数量\n     */</span>\n    <span class=\"hljs-keyword\">public</span> ColumnExpression aiLikeCount = <span class=\"hljs-keyword\">new</span> ColumnExpression(<span class=\"hljs-string\">\"AI_LIKE_COUNT\"</span>, <span class=\"hljs-keyword\">this</span>);\n    <span class=\"hljs-comment\">/**\n     * 评论数量\n     */</span>\n    <span class=\"hljs-keyword\">public</span> ColumnExpression aiCommentCount = <span class=\"hljs-keyword\">new</span> ColumnExpression(<span class=\"hljs-string\">\"AI_COMMENT_COUNT\"</span>, <span class=\"hljs-keyword\">this</span>);\n    <span class=\"hljs-comment\">/**\n     * 分享数量\n     */</span>\n    <span class=\"hljs-keyword\">public</span> ColumnExpression aiShareCount = <span class=\"hljs-keyword\">new</span> ColumnExpression(<span class=\"hljs-string\">\"AI_SHARE_COUNT\"</span>, <span class=\"hljs-keyword\">this</span>);\n    <span class=\"hljs-comment\">/**\n     * 文章内容\n     */</span>\n    <span class=\"hljs-keyword\">public</span> ColumnExpression aiContent = <span class=\"hljs-keyword\">new</span> ColumnExpression(<span class=\"hljs-string\">\"AI_CONTENT\"</span>, <span class=\"hljs-keyword\">this</span>);\n    <span class=\"hljs-comment\">/**\n     * 是否为原创文章，Y：原创，N：转载\n     */</span>\n    <span class=\"hljs-keyword\">public</span> ColumnExpression aiIsOriginal = <span class=\"hljs-keyword\">new</span> ColumnExpression(<span class=\"hljs-string\">\"AI_IS_ORIGINAL\"</span>, <span class=\"hljs-keyword\">this</span>);\n    <span class=\"hljs-comment\">/**\n     * 文章是否发布，Y：已发布，N：未发布\n     */</span>\n    <span class=\"hljs-keyword\">public</span> ColumnExpression aiIsRelease = <span class=\"hljs-keyword\">new</span> ColumnExpression(<span class=\"hljs-string\">\"AI_IS_RELEASE\"</span>, <span class=\"hljs-keyword\">this</span>);\n    <span class=\"hljs-comment\">/**\n     * 是否热门,Y：热门，N：非热门\n     */</span>\n    <span class=\"hljs-keyword\">public</span> ColumnExpression aiIsHot = <span class=\"hljs-keyword\">new</span> ColumnExpression(<span class=\"hljs-string\">\"AI_IS_HOT\"</span>, <span class=\"hljs-keyword\">this</span>);\n    <span class=\"hljs-comment\">/**\n     * 是否置顶，Y：置顶，N：普通\n     */</span>\n    <span class=\"hljs-keyword\">public</span> ColumnExpression aiIsTop = <span class=\"hljs-keyword\">new</span> ColumnExpression(<span class=\"hljs-string\">\"AI_IS_TOP\"</span>, <span class=\"hljs-keyword\">this</span>);\n    <span class=\"hljs-comment\">/**\n     * 是否推荐，Y：推荐，N：不推荐\n     */</span>\n    <span class=\"hljs-keyword\">public</span> ColumnExpression aiIsRecommend = <span class=\"hljs-keyword\">new</span> ColumnExpression(<span class=\"hljs-string\">\"AI_IS_RECOMMEND\"</span>, <span class=\"hljs-keyword\">this</span>);\n    <span class=\"hljs-comment\">/**\n     * 是否为markdown语法文章\n     */</span>\n    <span class=\"hljs-keyword\">public</span> ColumnExpression aiIsMarkdown = <span class=\"hljs-keyword\">new</span> ColumnExpression(<span class=\"hljs-string\">\"AI_IS_MARKDOWN\"</span>, <span class=\"hljs-keyword\">this</span>);\n    <span class=\"hljs-comment\">/**\n     * 发布时间\n     */</span>\n    <span class=\"hljs-keyword\">public</span> ColumnExpression aiReleaseTime = <span class=\"hljs-keyword\">new</span> ColumnExpression(<span class=\"hljs-string\">\"AI_RELEASE_TIME\"</span>, <span class=\"hljs-keyword\">this</span>);\n    <span class=\"hljs-comment\">/**\n     * 文章状态，O：正常，D：已删除\n     */</span>\n    <span class=\"hljs-keyword\">public</span> ColumnExpression aiStatus = <span class=\"hljs-keyword\">new</span> ColumnExpression(<span class=\"hljs-string\">\"AI_STATUS\"</span>, <span class=\"hljs-keyword\">this</span>);\n    <span class=\"hljs-comment\">/**\n     * 备注信息\n     */</span>\n    <span class=\"hljs-keyword\">public</span> ColumnExpression aiMark = <span class=\"hljs-keyword\">new</span> ColumnExpression(<span class=\"hljs-string\">\"AI_MARK\"</span>, <span class=\"hljs-keyword\">this</span>);\n    <span class=\"hljs-comment\">/**\n     * 文章创建时间\n     */</span>\n    <span class=\"hljs-keyword\">public</span> ColumnExpression aiCreateTime = <span class=\"hljs-keyword\">new</span> ColumnExpression(<span class=\"hljs-string\">\"AI_CREATE_TIME\"</span>, <span class=\"hljs-keyword\">this</span>);\n    <span class=\"hljs-meta\">@Override</span>\n    <span class=\"hljs-keyword\">public</span> ColumnExpression[] getColumns() {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> ColumnExpression[]{aiId, aiUserId, aiTitle, aiReadCount, aiLikeCount, aiCommentCount, aiShareCount, aiContent, aiIsOriginal, aiIsRelease, aiIsHot, aiIsTop, aiIsRecommend, aiIsMarkdown, aiReleaseTime, aiStatus, aiMark, aiCreateTime};\n    }\n\n}\n</code></pre>\n<h2>实体生成后的位置在哪？</h2>\n<p><code>Codegen</code>所生成的所有实体都位于项目根目录下的<code>target/generated-sources/java</code>下，可以自行复制到业务目录、或者直接使用。</p>\n<h2>使用动态查询实体示例</h2>\n<pre><code class=\"language-java\"><span class=\"hljs-comment\">/**\n  * Mybatis Enhance Dsl Factory\n  */</span>\n<span class=\"hljs-meta\">@Autowired</span>\n<span class=\"hljs-keyword\">private</span> EnhanceDslFactory dslFactory;\n\n<span class=\"hljs-comment\">/**\n  * 根据文章编号查询示例\n  *\n  * <span class=\"hljs-doctag\">@param</span> articleId 文章编号\n  * <span class=\"hljs-doctag\">@return</span>\n  */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> KlArticleInfo <span class=\"hljs-title\">selectById</span><span class=\"hljs-params\">(String articleId)</span> </span>{\n  DKlArticleInfo dKlArticleInfo = DKlArticleInfo.DSL();\n  <span class=\"hljs-keyword\">return</span> dslFactory.createSearchable()\n    .selectFrom(dKlArticleInfo)\n    <span class=\"hljs-comment\">// 文章主键</span>\n    .where(dKlArticleInfo.aiId.eq(articleId))\n    <span class=\"hljs-comment\">// and 状态正常</span>\n    .and(dKlArticleInfo.aiStatus.eq(<span class=\"hljs-string\">\"O\"</span>))\n    .resultType(KlArticleInfo.class)\n    .fetchOne();\n}\n</code></pre>\n",
  "link": "/zh-cn/docs/2.1.5.RELEASE/api-boot-mybatis-enhance-codegen.html",
  "meta": {
    "title": "ApiBoot Enhance 专属的代码生成插件"
  }
}