{
  "filename": "quick-start.md",
  "__html": "<p><a href=\"https://www.aliyun.com/minisite/goods?userCode=rqxni4zt&share_source=copy_link\" target=\"_blank\"><img src=\"https://blog.yuqiyu.com/images/1212/aliyun_1212.jpg\" width=\"300px\"/></a>\n<br/>\n阿里云年底大促，点击领取2000元专属的优惠券，购买云产品1折上还可以使用优惠券。</p>\n<hr/>\n<h1>快速开始</h1>\n<p><code>ApiBoot</code>是一系列的第三方服务依赖，基础的项目还是采用<code>SpringBoot</code>方式进行构建，集成<code>ApiBoot</code>步骤如下</p>\n<h2>1. 创建SpringBoot项目</h2>\n<p>创建<code>SpringBoot</code>项目有多种，简单介绍两种方式：</p>\n<ul>\n<li><code>https://start.spring.io/</code></li>\n<li><code>idea开发工具创建Spring Initializr项目</code></li>\n<li>...</li>\n</ul>\n<h2>2. 添加ApiBoot版本控制</h2>\n<p><code>SpringBoot</code>项目创建完成我们需要添加<code>ApiBoot</code>的版本控制，这样我们就可以像<code>SpringBoot</code>、<code>SpringCloud</code>在添加依赖时不用配置<code>version</code>，有利于我们做版本统一维护。</p>\n<p><code>ApiBoot</code>版本依赖需要添加在<code>pom.xml</code>配置文件内，如下所示：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-comment\">&lt;!--ApiBoot 版本依赖--&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencyManagement</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.minbox.framework<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>api-boot-dependencies<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>{lastVersion}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scope</span>&gt;</span>import<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">scope</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">type</span>&gt;</span>pom<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">type</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencyManagement</span>&gt;</span>\n</code></pre>\n<blockquote>\n<p>可以从<code>Maven Centerl</code>查询最新的<code>ApiBoot</code>版本来替换<code>{lastVersion}</code>。</p>\n<p>查询地址：<a href=\"https://search.maven.org/search?q=a:api-boot-dependencies\">https://search.maven.org/search?q=a:api-boot-dependencies</a></p>\n</blockquote>\n<p>到这里我们就已经完成了<code>ApiBoot</code>的基础集成，是不是特别简单？</p>\n<h2>3. 开箱即用</h2>\n<p>那接下来就根据具体的需求来选择使用<code>ApiBoot</code>提供的封装依赖了，比如你需要集成<code>swagger</code>文档，那么就可以添加如下依赖到<code>pom.xml</code>文件内：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-comment\">&lt;!--ApiBoot Swagger--&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.minbox.framework<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>api-boot-starter-swagger<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scope</span>&gt;</span>test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">scope</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span>\n</code></pre>\n<p>依赖添加完成后根据具体的<code>组件使用文档</code>来进行配置参数以及接口实现等。</p>\n<p>详情参考左侧菜单<code>集成组件</code>。</p>\n",
  "link": "/zh-cn/docs/quick-start.html",
  "meta": {
    "title": "创建你的第一个ApiBoot应用程序"
  }
}